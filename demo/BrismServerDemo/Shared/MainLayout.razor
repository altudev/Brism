@inherits LayoutComponentBase
@inject ThemeService ThemeService
@inject IJSRuntime JSRuntime
@implements IDisposable

<PageTitle>BrismServerDemo</PageTitle>

<div class="page @(ThemeService.IsDarkMode ? "dark-mode" : "light-mode")">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <a href="https://github.com/altudev/Brism" target="_blank" style="padding-right: 15px">Brism</a>
            <button class="theme-toggle-btn" @onclick="ToggleTheme">
                @(ThemeService.IsDarkMode ? "Light Mode" : "Dark Mode")
            </button>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    protected override void OnInitialized()
    {
        ThemeService.OnThemeChange += StateHasChanged;
        ThemeService.OnThemeChange += UpdatePrismTheme;
    }

    private async void UpdatePrismTheme()
    {
        await JSRuntime.InvokeVoidAsync("togglePrismTheme", ThemeService.IsDarkMode);
    }

    private async Task ToggleTheme()
    {
        ThemeService.IsDarkMode = !ThemeService.IsDarkMode;
        await JSRuntime.InvokeVoidAsync("togglePrismTheme", ThemeService.IsDarkMode);
    }

    public void Dispose()
    {
        ThemeService.OnThemeChange -= StateHasChanged;
        ThemeService.OnThemeChange -= UpdatePrismTheme;
    }
}